"""
Django settings for backend project.

Generated by 'django-admin startproject' using Django 5.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import os


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Load environment variables from .env file if it exists
try:
    from dotenv import load_dotenv
    load_dotenv()
except ImportError:
    pass

# Check if whitenoise is available
WHITENOISE_AVAILABLE = False
try:
    import whitenoise
    WHITENOISE_AVAILABLE = True
except ImportError:
    pass


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get('SECRET_KEY', 'django-insecure-tb2qkxzlau+(^(3qebdsknuy&upj(dnkrww^wh8h+o(4&6#@(^')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.environ.get('DEBUG', 'True') == 'True'

import os

# Get ALLOWED_HOSTS from environment variable, split by comma if exists
env_allowed_hosts = os.environ.get('ALLOWED_HOSTS')
if env_allowed_hosts:
    ALLOWED_HOSTS = env_allowed_hosts.split(',')
else:
    ALLOWED_HOSTS = []

# Always include your main Render hostname
ALLOWED_HOSTS.append('nabarajkc.com.np')

# Include other common/fallback hosts
ALLOWED_HOSTS += [
    'localhost',
    '127.0.0.1',
    'nawaprativaschool.onrender.com',
    'nawaprativa.edu.np',
    'www.nawaprativa.edu.np',
    'nawaprativa-4ewa.onrender.com',
    'nabarajkc.com.np'

]

# Remove duplicates
ALLOWED_HOSTS = list(set(ALLOWED_HOSTS))




# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'core',
    'django_extensions',

]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

# Add whitenoise middleware if available
if WHITENOISE_AVAILABLE:
    MIDDLEWARE.insert(1, 'whitenoise.middleware.WhiteNoiseMiddleware')

ROOT_URLCONF = 'backend.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'backend' / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'backend.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

# Database configuration
# Uses environment variables if available, otherwise falls back to local PostgreSQL
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'nawaprativa_l1gs',
        'USER': 'nawaprativa_l1gs_user',
        'PASSWORD': 'gSCppbgr9SfaaK3ROYurYH3L554YjBJ8',
        #  Use EXTERNAL host for local development
        'HOST': 'dpg-d2l1n275r7bs73d83170-a.singapore-postgres.render.com',
        'PORT': '5432',
   }
}


#DATABASES = {
 #   'default': {
  #      'ENGINE': 'django.db.backends.sqlite3',
   #     'NAME': BASE_DIR / 'db.sqlite3',
    #}
#}



#import os
#from pathlib import Path
#from dotenv import load_dotenv

# Load environment variables from .env file
#load_dotenv()

#BASE_DIR = Path(__file__).resolve().parent.parent

# Database configuration using environment variables
#DATABASES = {
    #'default': {
       # 'ENGINE': 'django.db.backends.postgresql',
      #  'NAME': os.getenv('DB_NAME'),
     #   'USER': os.getenv('DB_USER'),
    #    'PASSWORD': os.getenv('DB_PASSWORD'),
   #     'HOST': os.getenv('DB_HOST'),
  #      'PORT': os.getenv('DB_PORT'),
 #   }
#}




  





# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = [
    BASE_DIR / 'backend' / 'static',
]
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

# WhiteNoise configuration for serving static files in production
if WHITENOISE_AVAILABLE:
    STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Email Configuration - Gmail Setup
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = os.environ.get('EMAIL_HOST', 'smtp.gmail.com')
EMAIL_PORT = int(os.environ.get('EMAIL_PORT', 587))
EMAIL_USE_TLS = os.environ.get('EMAIL_USE_TLS', 'True') == 'True'
EMAIL_HOST_USER = os.environ.get('EMAIL_HOST_USER', 'nawaprativaschool@gmail.com')
EMAIL_HOST_PASSWORD = os.environ.get('EMAIL_HOST_PASSWORD', '')
DEFAULT_FROM_EMAIL = os.environ.get('DEFAULT_FROM_EMAIL', 'Nawa Prativa School <nawaprativaschool@gmail.com>')

# For testing (uncomment to see emails in console instead of sending)
# EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'

# Email Templates Directory
EMAIL_TEMPLATES_DIR = BASE_DIR / 'backend' / 'templates' / 'emails'

JAZZMIN_SETTINGS = {
    "site_title": "Nawa Prativa Admin",
    "site_header": "Nawa Prativa School Admin",
    "site_brand": "Nawa Prativa",
    "welcome_sign": "Welcome to Nawa Prativa School Admin Portal",
    "copyright": "Nawa Prativa Secondary School",
    "site_logo": "images/gallery/schoolslogo.jpg",
    "login_logo": "images/gallery/schoolslogo.jpg",
    "login_logo_dark": "images/gallery/schoolslogo.jpg",
    "show_sidebar": True,
    "navigation_expanded": True,
    "hide_apps": [],
    "hide_models": [],
    "order_with_respect_to": ["auth", "core", "ActivityLog", "Student", "Teacher", "Homework", "Notice", "Result"],
    "custom_links": {
        "core": [
            {"name": "School Website", "url": "/", "icon": "fas fa-home", "permissions": ["auth.view_user"]},
            {"name": "Contact Support", "url": "mailto:info@nawaprativa.edu.np", "icon": "fas fa-envelope"},
            {"name": "Enhanced Marks Entry", "url": "/admin/core/result/enhanced-marks-entry/", "icon": "fas fa-pencil-alt", "permissions": ["auth.view_user"]}
        ]
    },
    "icons": {
        "auth": "fas fa-users-cog",
        "core.student": "fas fa-user-graduate",
        "core.teacher": "fas fa-chalkboard-teacher",
        "core.homework": "fas fa-book-open",
        "core.activitylog": "fas fa-history",
        "core.notice": "fas fa-bell",
        "core.result": "fas fa-award",
    },
    "default_icon_parents": "fas fa-chevron-circle-right",
    "default_icon_children": "fas fa-circle",
    "related_modal_active": True,
    "custom_css": "css/admin_custom.css",
    "custom_js": None,
    "show_ui_builder": True,
    "changeform_format": "horizontal_tabs",
    "changeform_format_overrides": {"Student": "collapsible", "Teacher": "collapsible"},
    "theme": "lux",
    "dark_mode_theme": "darkly",
    "use_google_fonts_cdn": True,
    "topmenu_links": [
        {"name": "Home", "url": "/", "permissions": ["auth.view_user"]},
        {"model": "auth.user"},
        {"app": "core"},
    ],
    "usermenu_links": [
        {"name": "Profile", "url": "/profile/", "icon": "fas fa-user"},
        {"name": "Logout", "url": "/admin/logout/", "icon": "fas fa-sign-out-alt"},
    ],
    "show_sidebar": True,
    "navigation_expanded": True,
    "search_model": ["core.Student", "core.Teacher", "core.Homework", "core.ActivityLog"],
    "show_breadcrumbs": True,
    "show_refresh": True,
    "show_home": True,
    "show_all_apps": True,
    "show_model_icons": True,
    "language_chooser": True,
    "site_logo_classes": "img-circle",
    "login_logo_height": "90px",
    "login_logo_background_color": "#fff",
}

LOGIN_URL = '/teacher/login/'
